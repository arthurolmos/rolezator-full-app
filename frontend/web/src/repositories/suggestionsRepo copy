import IBlacklist from "../interfaces/IBlacklist";
import IOption from "../interfaces/IOption";
import ISuggestion from "../interfaces/ISuggestion";

const noSuggestion = {
  id: "0",
  description: "AÃ­ vc me complica!",
};

export function getRandomSuggestion(
  options: Array<IOption>,
  userBlacklist: Array<IBlacklist>
): IOption {
  let items = [...options];
  let result = noSuggestion;

  if (userBlacklist.length > 0) {
    const blacklistSet = new Set(
      userBlacklist.map((item: IBlacklist) => item.name)
    );

    const userOptions = [
      ...options.filter((item) => {
        return !blacklistSet.has(item.name);
      }),
    ];
    items = userOptions;
  }

  if (items.length !== 0) {
    const index = Math.floor(Math.random() * items.length);
    result = items[index];
  }

  return result;
}

export function getRandomUserSuggestion(
  userSuggestions: Array<ISuggestion>
): IOption | ISuggestion {
  let result = noSuggestion;

  if (userSuggestions.length !== 0) {
    const index = Math.floor(Math.random() * userSuggestions.length);
    result = userSuggestions[index];
  }

  return result;
}
